{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","alert","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"uLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAoB5C,OACI,0BAAMC,SAbW,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAoBO,OAC7CN,EAAc,KAEdO,MAAM,gDAMN,2BACIC,KAAK,OACLC,MAAOV,EACPW,SArBa,SAACR,GACtBF,EAAcE,EAAES,OAAOF,QAqBfG,YAAY,0B,uBC7BtBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,4DACI,mCAEF,GAERC,EALM,iDAK0CC,UAAUH,GALpD,kBAGE,GAHF,oBACI,oCADJ,SAOOI,MAAOF,GAPd,cAONG,EAPM,gBASSA,EAAKC,OATd,uBASLC,EATK,EASLA,KAEDC,EAAQD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAf7B,kBAmBLM,GAnBK,4CAAH,sDCEAO,EAAc,SAAC,GAAoB,IAAnBH,EAAkB,EAAlBA,MAASV,GAAS,EAAZS,GAAY,EAATT,KAClC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAMgB,IAAKN,MCApBO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAa,IAAD,EAEXhB,mBAAS,CAC/BuB,KAAK,GACLa,SAAU,IAJuB,mBAE9BC,EAF8B,KAEvBC,EAFuB,KAmBrC,OAZAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAKkB,EACLL,SAAU,SAIxB,CAACpB,IAEIqB,EDfuBK,CAAa1B,GAA/Ba,EAFuB,EAE5BN,KAAYa,EAFgB,EAEhBA,QAEnB,OACI,oCACI,4BAAKpB,GACHoB,GAAW,2CAGTP,EAAOJ,KAAK,SAAAC,GACR,OACI,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,SEf1BkB,EAAe,WAAO,IAAD,EAEgB5C,mBAAS,CAAC,iBAF1B,mBAEhBQ,EAFgB,KAEHT,EAFG,KAIvB,OACI,6BACI,8CACA,6BAEA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,4BAEQS,EAAWiB,KAAK,SAACT,GAAD,OACZ,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,U,MCV1D6B,IAASC,OAAO,kBAAC,EAAD,MAAiBC,SAASC,eAAe,U","file":"static/js/main.cfb02afe.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleIputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2 ){\r\n            setCategories( categories => [ inputValue,...categories ] );\r\n            setInputValue('');\r\n        }else{\r\n            alert('La consulta debe tener mas de 3 caracteres');\r\n        }         \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>  \r\n            <input \r\n                type=\"text\" \r\n                value={inputValue}\r\n                onChange={handleIputChange}\r\n                placeholder=\"Buscar CategorÃ­a\"\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes  = {\r\n    setCategories : PropTypes.func.isRequired\r\n};\r\n","const getGifs = async(category) =>{\r\n    const api_key = 'sms7E5xqtDUp55qw1ckFcslfkMDPEFvX';\r\n    \r\n    const limit = 15 ;\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=${limit}&api_key=${api_key}`;\r\n    \r\n    const resp = await fetch( url );\r\n    \r\n    const {data} = await resp.json();\r\n    \r\n    const gifs =  data.map(img =>{\r\n        return({\r\n            id:img.id,\r\n            title :img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }) \r\n    })\r\n    \r\n    return gifs;\r\n}\r\n\r\nexport {getGifs}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,id,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" >\r\n            <img src={url}  alt={title} />\r\n            {/* <span>{title}</span> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading && <p> Loading... </p> }\r\n\r\n            {\r\n                images.map( img =>{\r\n                    return (\r\n                        <GifGridItem \r\n                            key={img.id} \r\n                            {...img}\r\n                        />\r\n                    )\r\n                })\r\n            }        \r\n        </>\r\n        \r\n        )\r\n}\r\n        ","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading : true\r\n    });\r\n    \r\n    useEffect( () =>{\r\n        \r\n        getGifs(category)\r\n            .then( imgs =>{\r\n                setstate({\r\n                    data:imgs,\r\n                    loading : false\r\n            });\r\n        })\r\n        \r\n    },[category]);\r\n    \r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories , setCategories ] =  useState(['apex legends']);\r\n\r\n    return(\r\n        <div>\r\n            <h2>Gif Expert App</h2>\r\n            <hr></hr>\r\n\r\n            <AddCategory setCategories= {setCategories} />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => \r\n                        <GifGrid key={category} category={category}/> \r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n} \r\n\r\nexport {GifExpertApp};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(<GifExpertApp />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}